---
title: "Exercices on session *Data visualisation*"
format:
  pdf
execute:
  echo: false 
  eval: false 
---

```{r, eval = TRUE}
#| message: false
library(tidyverse)
library(patchwork)
```

  
# Graphical exploration on wood density data

For this part, there is no need to improve the appearance of the plots.

Let's work with the *wdData* from a previous version of the package *BIOMASS* (v 2.1.11). These data are available [here](https://geraldinederroire.github.io/Course_R_Forest_Sciences/5_graph/data/wdData.csv){preview-link="false"}, and the metadata [here](https://geraldinederroire.github.io/Course_R_Forest_Sciences/5_graph/data/wdData.csv){preview-link="false"}.

* Read these data as a tibble

```{r}
wdData <- read_csv("data/wdData.csv")
str(wdData)
```

* Make a histogram of wood density for each of the following three regions, using facets: South_America_(tropical), Australia/PNG_(tropical), Africa_(tropical)

```{r}
wdData %>% 
  filter(region %in% c("South_America_(tropical)", 
                       "Australia/PNG_(tropical)", 
                       "Africa_(tropical)")) %>% 
  ggplot(aes(x = wd)) + 
  geom_histogram() + 
  facet_wrap(~ region)
```

* Represent the same data but with a single density plot

```{r}
wdData %>% 
  filter(region %in% c("South_America_(tropical)", 
                       "Australia/PNG_(tropical)", 
                       "Africa_(tropical)")) %>% 
  ggplot(aes(x = wd, color = region)) + 
  geom_density()
```

* Compare the distribution of wood density for the 10 more common family on a single graph

```{r}
# do a boxplot because a density plot would be too much

abd_10 <- wdData %>% 
  count(family) %>% 
  arrange(desc(n)) %>% 
  slice_head(n = 10) 

wdData %>% 
  filter(family %in% abd_10$family) %>% 
  ggplot(aes(x = family, y = wd)) + 
  geom_boxplot() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

* Show the number of observation per *family* and *regionId*

```{r}
# 1st possibility: heatmap
wdData %>% 
  filter(family %in% abd_10$family) %>% 
  count(family, regionId) %>% 
  ggplot(aes(x = family, y = regionId)) + 
  geom_tile(aes(fill = n)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_fill_viridis_c()
```

```{r}
# 2nd possibility: bubble plot
wdData %>% 
  filter(family %in% abd_10$family) %>% 
  ggplot(aes(x = family, y = regionId)) + 
  geom_count()
```


# Iris data

Let's now work with the *iris* dataset (available from datasets, which is a package automatically loaded with R, your don't need to install it).

*"This famous (Fisher's or Anderson's) iris data set gives the measurements in centimeters of the variables sepal length and width and petal length and width, respectively, for 50 flowers from each of 3 species of iris. The species are Iris setosa, versicolor, and virginica."*

```{r}
data(iris)
str(iris)
```

Reproduce the following graph made with the *iris* dataset.

The colours are *steelblue3*, *plum* and *darkolivegreen3* and the theme *bw*.

```{r, eval = TRUE}
#| fig-width: 8
#| fig-height: 8
#| message: false

# 1st plot
p1 <- ggplot(iris, aes(x = Petal.Length, y=Petal.Width, 
                       color = Species)) + 
  geom_point() + 
  geom_smooth(method = lm) + 
  labs(x = "Petal length (cm)", # x axis label
       y = "Petal width (cm)",  # y axis label
       color = "",              # no title for the legend
       title = "Relationship between petal lenght and width") + # plot title
  scale_x_continuous(breaks = 1:8) + # change tick marks on x axis
  scale_y_continuous(breaks = seq(0, 2.5, by=0.5)) + # change tick marks on y axis
  scale_color_manual(values = c("setosa" = "steelblue3", # set the colours
                                "versicolor" = "plum",
                                "virginica" = "darkolivegreen3")) + 
  theme_bw() + # change the theme
  theme(legend.position = "bottom") # change the position of the legend

# 2nd plot
p2 <- ggplot(iris, aes(x = Species, y = Petal.Length, fill = Species)) +
  geom_boxplot() + 
  labs(x = "", # x axis label
       y = "Petal length (cm)", # y axis label
       title = "Distribution of petal length") + # plot title
  scale_y_continuous(breaks = 1:8) + # change tick marks on y axis
  scale_fill_manual(values = c("setosa" = "steelblue3", # set the colours
                                "versicolor" = "plum",
                                "virginica" = "darkolivegreen3")) + 
  theme_bw() + # change the theme
  theme(legend.position = "none") # remove the legend

# 3rd plot
p3 <- ggplot(iris, aes(x = Species, y = Petal.Width, fill = Species)) +
  geom_boxplot() + 
  labs(x = "", # x axis label
       y = "Petal width (cm)", # y axis label
       title = "Distribution of petal width") + # plot title
  scale_y_continuous(breaks = seq(0, 2.5, by=0.5)) + # change tick marks on y axis
  scale_fill_manual(values = c("setosa" = "steelblue3", # set the colours
                                "versicolor" = "plum",
                                "virginica" = "darkolivegreen3")) + 
  theme_bw() + # change the theme
  theme(legend.position = "none") # remove the legend

p1 /(p2 | p3) # assemble the plots with patchwork
```


# For next time

* Make sure you remember what we saw on descriptive statistics in the session *Working with data*

* Install the following packages from CRAN: *multcompView*, *GGally*

* Make sure you have the following packages: *questionr*, *tidyverse*, *BIOMASS*
  
* Download the *RData* file available [here](https://geraldinederroire.github.io/Course_R_Forest_Sciences/6_basic_statistics/data/data_statistics_1.RData){preview-link="false"}
and store them in your raw data folder.