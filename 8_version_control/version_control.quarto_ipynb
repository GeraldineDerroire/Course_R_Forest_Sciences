{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Introduction to Version Control with Git and GitHub\"\n",
        "author: G√©raldine Derroire\n",
        "institute: Cirad - UnB\n",
        "date: last-modified\n",
        "format: \n",
        "  revealjs:\n",
        "    theme: solarized\n",
        "    output-location: fragment \n",
        "    slide-number: true\n",
        "    preview-links: true\n",
        "    chalkboard: true\n",
        "    link-external-icon: true\n",
        "    link-external-newwindow: true\n",
        "    incremental: true\n",
        "execute:\n",
        "  echo: true   \n",
        "  warning: true\n",
        "  message: true \n",
        "  cache: true\n",
        "editor: \n",
        "  markdown: \n",
        "    wrap: sentence\n",
        "---\n",
        "\n",
        "\n",
        "## What is [git]{style=\"color:indianred;\"}?\n",
        "\n",
        "::::: columns\n",
        "::: {.column width=\"60%\"}\n",
        "[git]{style=\"color:indianred;\"} is a free and open source software that runs **on you computer**\n",
        "\n",
        "[git]{style=\"color:indianred;\"} is a **Version Control System** that helps track changes to files over time.\n",
        "It allows you to\n",
        "\n",
        "-   keep the full history of a file and a project\n",
        "\n",
        "-   revert back to a previous version\n",
        ":::\n",
        "\n",
        "::: {.column width=\"40%\"}\n",
        "![](git.png)\n",
        ":::\n",
        ":::::\n",
        "\n",
        "## Why use [git]{style=\"color:indianred;\"}?\n",
        "\n",
        "[git]{style=\"color:indianred;\"} helps you to\n",
        "\n",
        "-   keep your project clean by avoiding saving multiple versions of each file: *no more [script_v1_final_final_OK.R]{style=\"color:gray;\"}*\n",
        "\n",
        "-   always know what the current version is\n",
        "\n",
        "-   know what are the difference between versions\n",
        "\n",
        "## What is [GitHub]{style=\"color:indianred;\"}?\n",
        "\n",
        "::::: columns\n",
        "::: {.column width=\"55%\"}\n",
        "[GitHub]{style=\"color:indianred;\"} is an **online platform** for hosting and sharing git repositories.\n",
        "\n",
        "It connects with [git]{style=\"color:indianred;\"} to support backup, collaboration, and project management.\n",
        "\n",
        "[Other hosting platforms exist: GitLab, BitBucket, SourceForge...]{style=\"font-size: 30px\"}\n",
        ":::\n",
        "\n",
        "::: {.column width=\"45%\"}\n",
        "![](github.png)\n",
        ":::\n",
        ":::::\n",
        "\n",
        "## Why use [GitHub]{style=\"color:indianred;\"}?\n",
        "\n",
        "[GitHub]{style=\"color:indianred;\"} allows you to:\n",
        "\n",
        "-   back up your work safely in the cloud\n",
        "\n",
        "-   store your project history online\n",
        "\n",
        "-   synchronise changes between computers and collaborators\n",
        "\n",
        "-   collaborate by tracking and reviewing contributions\n",
        "\n",
        "-   present your work though a clean interface\n",
        "\n",
        "-   manage collaborative research projects\n",
        "\n",
        "## [git]{style=\"color:indianred;\"} and [GitHub]{style=\"color:indianred;\"}\n",
        "\n",
        "[git]{style=\"color:indianred;\"} and [GitHub]{style=\"color:indianred;\"} are useful tools for **reproducibility**.\n",
        "\n",
        "They are two different things:\n",
        "\n",
        "-   üîÑ Git manages version control **on your computer**\n",
        "\n",
        "-   ‚òÅÔ∏è GitHub helps you share, back up, and collaborate **online**\n",
        "\n",
        "## Setting it up\n",
        "\n",
        "You already set up [git]{style=\"color:indianred;\"} and [GitHub]{style=\"color:indianred;\"} following these [instructions](https://geraldinederroire.github.io/Course_R_Forest_Sciences/0_installing_enviro){preview-link=\"false\"}\n",
        "\n",
        "You should now have:\n",
        "\n",
        "::: nonincremental\n",
        "-   [git]{style=\"color:indianred;\"} installed, configurated\n",
        "\n",
        "-   a [GitHub]{style=\"color:indianred;\"} and a ssh key\n",
        ":::\n",
        "\n",
        "::: notes\n",
        "all good for everyone?\n",
        ":::\n",
        "\n",
        "## A few definitions\n",
        "\n",
        "[A ]{style=\"font-size: 30px\"}[version]{style=\"color:indianred;\"} is the state of the entire project at a given point in time.\n",
        "\n",
        "::::: columns\n",
        "::: {.column width=\"55%\"}\n",
        "[There are three **local areas** in a git repository:]{style=\"font-size: 30px\"}\n",
        "\n",
        "-   [the ]{style=\"font-size: 30px\"}[working copy]{style=\"color:indianred;\"} is the current state of the directory (what you actually see)\n",
        "\n",
        "-   [the ]{style=\"font-size: 30px\"}[staging area]{style=\"color:indianred;\"} contains selected files that will be added to the next version\n",
        "\n",
        "-   [a ]{style=\"font-size: 30px\"}[repository]{style=\"color:indianred;\"} is an area containing all the versions\n",
        ":::\n",
        "\n",
        "::: {.column width=\"45%\"}\n",
        "![](local_remote.png)\n",
        "\n",
        "[The ]{style=\"font-size: 30px\"}[remote repository]{style=\"color:indianred;\"} is a copy of the git project stored on GitHub.\n",
        ":::\n",
        ":::::\n",
        "\n",
        "[Source of illustrations: [N. Casajus](https://frbcesab.github.io/intro-git){preview-link=\"false\"}]{style=\"font-size: 22px\"}\n",
        "\n",
        "## Basic workflow\n",
        "\n",
        "**Step1: [Stage]{style=\"color:indianred;\"} the changes**\n",
        "\n",
        "[After you've created or updated your files: Select the files you want to include in the next version (you can select all or only some modified files)]{style=\"font-size: 30px\"}\n",
        "\n",
        "![](stage.png){fig-align=\"center\" height=\"80%\"}\n",
        "\n",
        "[Staged files are now in the **staging area**.]{style=\"font-size: 30px\"}\n",
        "\n",
        "::: notes\n",
        "you may decide to commit some files later because they related to a separate task, or you may never commit then (see later gitignore)\n",
        ":::\n",
        "\n",
        "## Basic workflow\n",
        "\n",
        "**Step2: [Commit]{style=\"color:indianred;\"} the staged files**\n",
        "\n",
        "[A commit saves a snapshot of your project by creating a new **version**.]{style=\"font-size: 30px\"}\n",
        "\n",
        "![](commit.png){fig-align=\"center\" height=\"80%\"}\n",
        "\n",
        "[The commited files are not longer on the staging area.]{style=\"font-size: 30px\"}\n",
        "\n",
        "## Basic workflow\n",
        "\n",
        "[A ]{style=\"font-size: 30px\"}[Commit]{style=\"color:indianred;\"} records:\n",
        "\n",
        "-   [**WHAT**: the specific changes (line-by-line differences) in the files that you staged]{style=\"font-size: 30px\"}\n",
        "\n",
        "-   [**WHO**: the person who made the changes]{style=\"font-size: 30px\"}\n",
        "\n",
        "-   [**WHEN**: the date of the commit]{style=\"font-size: 30px\"}\n",
        "\n",
        "-   [**WHY**: a manually added message stating the reason of the commit (what has been done since the last version)]{style=\"font-size: 30px\"}\n",
        "\n",
        "::: notes\n",
        "go to the line often when typing text\n",
        ":::\n",
        "\n",
        "## Basic workflow\n",
        "\n",
        "**Step3: [Push]{style=\"color:indianred;\"} your commit(s) from the local to the remote repository (on GitHub)**\n",
        "\n",
        "[This makes your work visible to collaborators and backs it up online.]{style=\"font-size: 30px\"}\n",
        "\n",
        "![](push.png){fig-align=\"center\" height=\"80%\"}\n",
        "\n",
        "## Basic workflow\n",
        "\n",
        "[**Pull**]{style=\"color:indianred;\"} **these changes from the remote to your working area to update your local version**\n",
        "\n",
        "![](pull.png){fig-align=\"center\" height=\"80%\"}\n",
        "\n",
        "## Basic workflow\n",
        "\n",
        "::::: columns\n",
        "::: {.column width=\"70%\"}\n",
        "When to [commit]{style=\"color:indianred;\"}?\n",
        "\n",
        "-   [Commit often (make small commits)]{style=\"font-size: 30px\"}\n",
        "\n",
        "-   [Commit when you reach a milestone]{style=\"font-size: 30px\"}\n",
        "\n",
        "-   [Put separate tasks/problems in separate commits]{style=\"font-size: 30px\"}\n",
        "\n",
        "-   [Commit at the end of a work session]{style=\"font-size: 30px\"}\n",
        "\n",
        "-   [Commit files that actually work]{style=\"font-size: 30px\"}\n",
        ":::\n",
        "\n",
        "::: {.column width=\"30%\"}\n",
        "![](fire.png)\n",
        ":::\n",
        ":::::\n",
        "\n",
        "## Basic workflow\n",
        "\n",
        "[When to ]{.fragment}[push]{style=\"color:indianred;\"}?\n",
        "\n",
        "-   [Push often (every commits or every few commits)]{style=\"font-size: 30px\"}\n",
        "\n",
        "-   [Push when you reach a milestone]{style=\"font-size: 30px\"}\n",
        "\n",
        "-   [Push at the end of a work session]{style=\"font-size: 30px\"}\n",
        "\n",
        "[When to ]{.fragment}[pull]{style=\"color:indianred;\"}?\n",
        "\n",
        "-   [Pull before starting a new work session and before pushing (if working with collaborators)]{style=\"font-size: 30px\"}\n",
        "\n",
        "## git and Github from Rstudio\n",
        "\n",
        "The operations can be performed by writing command lines on the *Terminal*\n",
        "\n",
        "![](terminal.png)\n",
        "\n",
        "=\\> from the console =\\> not covered\n",
        "\n",
        "=\\> from Rstudio (used as a Git client) parler des autres Git client (such as GitHub desktop) ???\n",
        "probablement pas...\n",
        "https://happygitwithr.com/git-client\n",
        "\n",
        "et github\n",
        "\n",
        "# Create a new / repo\n",
        "\n",
        "https://happygitwithr.com/usage-intro =\\> me baser bcp l√† dessus\n",
        "\n",
        "see Eric\n",
        "\n",
        "practice at the same time\n",
        "\n",
        "## Create a new project starting with GitHub\n",
        "\n",
        "BEST WAY\n",
        "\n",
        "https://happygitwithr.com/new-github-first\n",
        "\n",
        "-   from nothing =\\> in github cf screen shot de Nicoals\n",
        "\n",
        "-   from an existing RStudio project https://inbo.github.io/git-course/course_rstudio.html#21_Create_a_repository and here https://inbo.github.io/git-course/course_rstudio.html#23_Clone_a_repo_to_work_locally\n",
        "\n",
        "and from here :\n",
        "\n",
        "\n",
        "```{=html}\n",
        "<!--\n",
        "\n",
        "## Existing project, GitHub first\n",
        "\n",
        "https://happygitwithr.com/existing-github-first\n",
        "\n",
        "Bof car √ßa veut dire faire un copi√©-coller de tout...\n",
        "but easy if there is no git history\n",
        "\n",
        "-->\n",
        "```\n",
        "\n",
        "\n",
        "## Create a repository from an existing RStudio project\n",
        "\n",
        "1/ Put the project under version control:\n",
        "\n",
        "  * *Tools/Version Control/Project Setup*\n",
        "\n",
        "  * Select *Git*\n",
        "\n",
        "![](add_git.png)\n",
        "\n",
        "2/ Stage and commit\n",
        "\n",
        "3/ Create a GitHub repo and get its URL\n",
        "\n",
        "4/ In the RStudio Terminal, run:\n",
        "\n",
        "\n",
        "```{bash, eval = FALSE}\n",
        "git remote add origin https://github.com/MonCompte/MonDepot.git\n",
        "git push -u origin main\n",
        "```\n",
        "\n",
        "\n",
        "\n",
        "::: notes\n",
        "To stage and commit: see next section\n",
        ":::\n",
        "\n",
        "\n",
        "## public/private\n",
        "\n",
        "## .gitignore\n",
        "\n",
        "https://frbcesab.github.io/intro-git/#/the-.gitignore\n",
        "\n",
        "syntax (cf cours nicolas)\n",
        "\n",
        "# Basic operations\n",
        "\n",
        "voir ici, also for screen shots: https://frbcesab.github.io/intro-git/#/rstudio-and-git-1\n",
        "\n",
        "## commit\n",
        "\n",
        "info elementaire = ligne (donc bcp de retour √† la ligne (permet e minimiser les conflicts cf Eric))\n",
        "\n",
        "good commit message (Nicolas), when to commit (done before)\n",
        "\n",
        "https://inbo.github.io/git-course/static/presentations/git.pdf\n",
        "\n",
        "https://happygitwithr.com/new-github-first#make-local-changes-save-commit-1\n",
        "\n",
        "## synchro github (push/pull)\n",
        "\n",
        "cf Nicolas sur probl√®me pushing: https://frbcesab.github.io/intro-git/#/help-me-i-cant-push\n",
        "\n",
        "https://happygitwithr.com/new-github-first#push-your-local-changes-to-github\n",
        "\n",
        "## push rejection\n",
        "\n",
        "https://happygitwithr.com/push-rejected et Casajus\n",
        "\n",
        "and here https://happygitwithr.com/pull-tricky\n",
        "\n",
        "# TITLE\n",
        "\n",
        "## Travel the past\n",
        "\n",
        "https://happygitwithr.com/time-travel-see-past\n",
        "\n",
        "https://inbo.github.io/git-course/course_rstudio.html#212_View_history\n",
        "\n",
        "## suivi de projet avec le diag (les lignes qui se rejoignent)\n",
        "\n",
        "# github visibility\n",
        "\n",
        "where to put this?\n",
        "at the end???\n",
        "\n",
        "https://rdatatoolbox.github.io/chapters/course-github.html\n",
        "\n",
        "github social network (or in intro?) : https://rdatatoolbox.github.io/chapters/course-github.html\n",
        "\n",
        "account page, organisation page, repo page =\\> cf cours Nicolas\n",
        "\n",
        "## the README.md\n",
        "\n",
        "https://happygitwithr.com/workflows-browsability\n",
        "\n",
        "# Collaborate\n",
        "\n",
        "## collaborate\n",
        "\n",
        "## add a collaborator:\n",
        "\n",
        "https://inbo.github.io/git-course/course_rstudio.html#31_Invite_collaborators\n",
        "\n",
        "pull, work, commit, push\n",
        "\n",
        "## conflict\n",
        "\n",
        "https://frbcesab.github.io/intro-git/#/help-me-i-cant-pull =\\> super bien expliqu√©\n",
        "\n",
        "https://inbo.github.io/git-course/course_rstudio.html#29_Create_a_conflict\n",
        "\n",
        "## issue\n",
        "\n",
        "## github projects\n",
        "\n",
        "here or somewhere else?\n",
        "\n",
        "# Branch\n",
        "\n",
        "pourquoi ?\n",
        "cf Eric\n",
        "\n",
        "## create a branch\n",
        "\n",
        "## merge branch\n",
        "\n",
        "# Fork and pull request\n",
        "\n",
        "https://rdatatoolbox.github.io/chapters/course-github.html\n",
        "\n",
        "https://happygitwithr.com/common-remote-setups\n",
        "\n",
        "https://happygitwithr.com/fork-and-clone and following (not sure how far I want to go...)\n",
        "\n",
        "# Clone\n",
        "\n",
        "https://happygitwithr.com/clone\n",
        "\n",
        "# integration continue et github action????\n",
        "\n",
        "## Acknowledgments {.smaller}\n",
        "\n",
        "::: nonincremental\n",
        "-   Cours Nicolas: https://frbcesab.github.io/intro-git/\n",
        "\n",
        "-   Cours Eric\n",
        "\n",
        "-   https://inbo.github.io/git-course/course_rstudio.html\n",
        ":::"
      ],
      "id": "ab595fdf"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}